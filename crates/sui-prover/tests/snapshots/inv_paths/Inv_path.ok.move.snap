---
source: crates/sui-prover/tests/integration.rs
expression: output
---
exiting with verification errors
error: prover::ensures assertion does not hold
   ┌─ tests/inputs/inv_paths/inv_path.ok.move:31:5
   │
31 │     }
   │     ^
   │
   =     at tests/inputs/inv_paths/inv_path.ok.move:29: increment_spec
   =         bar = inv_path_foo.Bar{x = 0u64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:25: foo
   =         bar = inv_path_foo.Bar{x = 0u64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:11: get_values
   =         result = 0u64
   =     at tests/inputs/inv_paths/inv_path.ok.move:12: get_values
   =         result = true
   =     at tests/inputs/inv_paths/inv_path.ok.move:26: foo
   =         bar = inv_path_foo.Bar{x = 0u64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:30: increment_spec
   =         bar = inv_path_foo.Bar{x = 0u64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:15: increment
   =         bar = inv_path_foo.Bar{x = 0u64}
   =         value = ELIDEDu64
   =     at tests/inputs/inv_paths/inv_path.ok.move:7: set_value
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:8: set_value
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:16: increment
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:31: increment_spec
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:25: foo
   =         bar = inv_path_foo.Bar{x = ELIDEDu64}
   =     at tests/inputs/inv_paths/inv_path.ok.move:11: get_values
   =         result = ELIDEDu64
   =     at tests/inputs/inv_paths/inv_path.ok.move:12: get_values
   =         result = false
   =     at tests/inputs/inv_paths/inv_path.ok.move:26: foo
