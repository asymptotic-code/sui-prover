---
source: crates/sui-prover/tests/integration.rs
expression: output
---
Verification successful


== Generated Boogie Code ==
procedure {:inline 1} $42_simple_max_succeeds_test_simple_max$impl(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    var $abort_if_cond: bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at tests/inputs/conditionals/simple_max.ok.move:6:1+1
    assume {:print "$at(114,85,86)"} true;
    assume {:print "$track_local(112,0,0,u64):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at tests/inputs/conditionals/simple_max.ok.move:6:1+1
    assume {:print "$track_local(112,0,1,u64):", $t1} $t1 == $t1;

    // $t3 := >=($t0, $t1) at tests/inputs/conditionals/simple_max.ok.move:7:11+2
    assume {:print "$at(114,140,142)"} true;
    call $t3 := $Ge($t0, $t1);

    // if ($t3) goto L1 else goto L0 at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at tests/inputs/conditionals/simple_max.ok.move:8:9+1
    assume {:print "$at(114,156,157)"} true;
L1:

    // $t4 := $t0 at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    assume {:print "$at(114,134,186)"} true;
    $t4 := $t0;

    // goto L2 at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    goto L2;

    // label L0 at tests/inputs/conditionals/simple_max.ok.move:10:9+1
    assume {:print "$at(114,179,180)"} true;
L0:

    // $t5 := $t1 at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    assume {:print "$at(114,134,186)"} true;
    $t5 := $t1;

    // label L2 at tests/inputs/conditionals/simple_max.ok.move:7:5+52
L2:

    // $t6 := if_then_else($t3, $t4, $t5) at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    // conditional_merge_insertion: t6 := if_then_else(t3, t4, t5)
    assume {:print "$at(114,134,186)"} true;
    $t6 := (if $t3 then $t4 else $t5);

    // trace_return[0]($t6) at tests/inputs/conditionals/simple_max.ok.move:7:5+52
    assume {:print "$track_return(112,0,0,u64):", $t6} $t6 == $t6;

    // label L3 at tests/inputs/conditionals/simple_max.ok.move:12:1+1
    assume {:print "$at(114,187,188)"} true;
L3:

    // return $t6 at tests/inputs/conditionals/simple_max.ok.move:12:1+1
    assume {:print "$at(114,187,188)"} true;
    $ret0 := $t6;
    return;

}
