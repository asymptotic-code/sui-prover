---
source: crates/move-stackless-bytecode/tests/testsuite.rs
---
============ initial translation from Move ================

[variant baseline]
public fun test::f($t0|a: u64): u64 {
     var $t1|x#1#0: u64
     var $t2|y#1#0: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: bool
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: u64
  0: $t3 := 1
  1: $t1 := $t3
  2: $t4 := 2
  3: $t2 := $t4
  4: $t5 := move($t0)
  5: $t6 := 0
  6: $t7 := >($t5, $t6)
  7: if ($t7) goto 8 else goto 14
  8: label L1
  9: $t8 := 99
 10: $t1 := $t8
 11: $t9 := 100
 12: $t2 := $t9
 13: goto 14
 14: label L0
 15: $t10 := move($t1)
 16: $t11 := move($t2)
 17: $t12 := *($t10, $t11)
 18: return $t12
}

============ after pipeline `conditional_merge_insertion` ================

[variant baseline]
public fun test::f($t0|a: u64): u64 {
     var $t1|x#1#0: u64
     var $t2|y#1#0: u64
     var $t3: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: u64
     var $t13: u64
  0: $t3 := 1
  1: $t1 := $t3
  2: $t4 := 2
  3: $t2 := $t4
  4: $t5 := 0
  5: $t6 := >($t0, $t5)
  6: if ($t6) goto 7 else goto 12
  7: label L1
  8: $t7 := 99
  9: $t10 := $t7
 10: $t8 := 100
 11: $t11 := $t8
 12: label L0
     # conditional_merge_insertion: t12 := if_then_else(t6, t10, t3)
 13: $t12 := if_then_else($t6, $t10, $t3)
     # conditional_merge_insertion: merge assign t1 := t12
 14: $t1 := $t12
     # conditional_merge_insertion: t13 := if_then_else(t6, t11, t4)
 15: $t13 := if_then_else($t6, $t11, $t4)
     # conditional_merge_insertion: merge assign t2 := t13
 16: $t2 := $t13
 17: $t9 := *($t1, $t2)
 18: return $t9
}
