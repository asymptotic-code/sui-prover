---
source: crates/move-stackless-bytecode/tests/testsuite.rs
---
============ initial translation from Move ================

[variant baseline]
public fun test::f($t0|cond1: bool, $t1|cond2: bool): u64 {
     var $t2|x#1#0: u64
     var $t3|y#1#0: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: u64
     var $t13: u64
  0: $t4 := 10
  1: $t2 := $t4
  2: $t5 := 20
  3: $t3 := $t5
  4: $t6 := move($t0)
  5: if ($t6) goto 6 else goto 17
  6: label L1
  7: $t7 := 99
  8: $t2 := $t7
  9: $t8 := move($t1)
 10: if ($t8) goto 11 else goto 17
 11: label L2
 12: $t9 := 100
 13: $t3 := $t9
 14: $t10 := 200
 15: $t2 := $t10
 16: goto 17
 17: label L0
 18: $t11 := move($t2)
 19: $t12 := move($t3)
 20: $t13 := *($t11, $t12)
 21: return $t13
}

============ after pipeline `conditional_merge_insertion` ================

[variant baseline]
public fun test::f($t0|cond1: bool, $t1|cond2: bool): u64 {
     var $t2|x#1#0: u64
     var $t3|y#1#0: u64
     var $t4: u64
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u64
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: u64
     var $t15: u64
  0: $t4 := 10
  1: $t2 := $t4
  2: $t5 := 20
  3: $t3 := $t5
  4: if ($t0) goto 5 else goto 14
  5: label L1
  6: $t6 := 99
  7: $t10 := $t6
  8: if ($t1) goto 9 else goto 14
  9: label L2
 10: $t7 := 100
 11: $t12 := $t7
 12: $t8 := 200
 13: $t11 := $t8
 14: label L0
     # conditional_merge_insertion: t13 := if_then_else(t0, t10, t2)
 15: $t13 := if_then_else($t0, $t10, $t2)
     # conditional_merge_insertion: merge assign t2 := t13
 16: $t2 := $t13
     # conditional_merge_insertion: t14 := if_then_else(t1, t11, t2)
 17: $t14 := if_then_else($t1, $t11, $t2)
     # conditional_merge_insertion: merge assign t2 := t14
 18: $t2 := $t14
     # conditional_merge_insertion: t15 := if_then_else(t1, t12, t3)
 19: $t15 := if_then_else($t1, $t12, $t3)
     # conditional_merge_insertion: merge assign t3 := t15
 20: $t3 := $t15
 21: $t9 := *($t2, $t3)
 22: return $t9
}
