---
source: crates/move-stackless-bytecode/tests/testsuite.rs
assertion_line: 260
---
============ initial translation from Move ================

[variant baseline]
fun test::if_else_if_chain($t0|x: u64): u64 {
     var $t1|tmp#$1: u64
     var $t2|tmp#$2: u64
     var $t3|tmp#$3: u64
     var $t4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: bool
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: u64
     var $t19: u64
  0: $t4 := copy($t0)
  1: $t5 := 10
  2: $t6 := <($t4, $t5)
  3: if ($t6) goto 4 else goto 8
  4: label L1
  5: $t7 := 1
  6: $t3 := $t7
  7: goto 38
  8: label L0
  9: $t8 := copy($t0)
 10: $t9 := 20
 11: $t10 := <($t8, $t9)
 12: if ($t10) goto 13 else goto 17
 13: label L4
 14: $t11 := 2
 15: $t2 := $t11
 16: goto 34
 17: label L3
 18: $t12 := move($t0)
 19: $t13 := 30
 20: $t14 := <($t12, $t13)
 21: if ($t14) goto 22 else goto 26
 22: label L7
 23: $t15 := 3
 24: $t1 := $t15
 25: goto 30
 26: label L6
 27: $t16 := 4
 28: $t1 := $t16
 29: goto 30
 30: label L8
 31: $t17 := move($t1)
 32: $t2 := $t17
 33: goto 34
 34: label L5
 35: $t18 := move($t2)
 36: $t3 := $t18
 37: goto 38
 38: label L2
 39: $t19 := move($t3)
 40: return $t19
}


[variant baseline]
fun test::nested_if_else($t0|x: u64, $t1|y: u64): u64 {
     var $t2|tmp#$2: u64
     var $t3|tmp#$3: u64
     var $t4|tmp#$4: u64
     var $t5: u64
     var $t6: u64
     var $t7: bool
     var $t8: u64
     var $t9: u64
     var $t10: bool
     var $t11: u64
     var $t12: u64
     var $t13: u64
     var $t14: u64
     var $t15: u64
     var $t16: u64
     var $t17: u64
     var $t18: u64
     var $t19: u64
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: u64
     var $t25: u64
     var $t26: u64
  0: $t5 := copy($t0)
  1: $t6 := 0
  2: $t7 := >($t5, $t6)
  3: if ($t7) goto 4 else goto 25
  4: label L1
  5: $t8 := copy($t1)
  6: $t9 := 0
  7: $t10 := >($t8, $t9)
  8: if ($t10) goto 9 else goto 15
  9: label L3
 10: $t11 := move($t0)
 11: $t12 := move($t1)
 12: $t13 := +($t11, $t12)
 13: $t2 := $t13
 14: goto 21
 15: label L2
 16: $t14 := move($t0)
 17: $t15 := move($t1)
 18: $t16 := -($t14, $t15)
 19: $t2 := $t16
 20: goto 21
 21: label L4
 22: $t17 := move($t2)
 23: $t4 := $t17
 24: goto 44
 25: label L0
 26: $t18 := copy($t1)
 27: $t19 := 0
 28: $t20 := >($t18, $t19)
 29: if ($t20) goto 30 else goto 36
 30: label L7
 31: $t21 := move($t1)
 32: $t22 := move($t0)
 33: $t23 := -($t21, $t22)
 34: $t3 := $t23
 35: goto 40
 36: label L6
 37: $t24 := 0
 38: $t3 := $t24
 39: goto 40
 40: label L8
 41: $t25 := move($t3)
 42: $t4 := $t25
 43: goto 44
 44: label L5
 45: $t26 := move($t4)
 46: return $t26
}

============ after pipeline `control_flow_reconstruction` ================

[variant baseline]
fun test::if_else_if_chain($t0|x: u64): u64 {
     var $t1|tmp#$1: u64
     var $t2|tmp#$2: u64
     var $t3|tmp#$3: u64
     var $t4: u64
     var $t5: bool
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: u64
     var $t11: bool
     var $t12: u64
     var $t13: u64
  0: $t4 := 10
  1: $t5 := <($t0, $t4)
  2: if ($t5) goto 3 else goto 7
  3: label L1
  4: $t6 := 1
  5: $t3 := $t6
  6: goto 30
  7: label L0
  8: $t7 := 20
  9: $t8 := <($t0, $t7)
 10: if ($t8) goto 11 else goto 15
 11: label L4
 12: $t9 := 2
 13: $t2 := $t9
 14: goto 28
 15: label L3
 16: $t10 := 30
 17: $t11 := <($t0, $t10)
 18: if ($t11) goto 19 else goto 23
 19: label L7
 20: $t12 := 3
 21: $t1 := $t12
 22: goto 26
 23: label L6
 24: $t13 := 4
 25: $t1 := $t13
 26: label L8
 27: $t2 := $t1
 28: label L5
 29: $t3 := $t2
 30: label L2
 31: return $t3
}


[variant baseline]
fun test::nested_if_else($t0|x: u64, $t1|y: u64): u64 {
     var $t2|tmp#$2: u64
     var $t3|tmp#$3: u64
     var $t4|tmp#$4: u64
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: bool
     var $t9: u64
     var $t10: bool
     var $t11: u64
  0: $t5 := 0
  1: $t6 := >($t0, $t5)
  2: if ($t6) goto 3 else goto 15
  3: label L1
  4: $t7 := 0
  5: $t8 := >($t1, $t7)
  6: if ($t8) goto 7 else goto 10
  7: label L3
  8: $t2 := +($t0, $t1)
  9: goto 12
 10: label L2
 11: $t2 := -($t0, $t1)
 12: label L4
 13: $t4 := $t2
 14: goto 27
 15: label L0
 16: $t9 := 0
 17: $t10 := >($t1, $t9)
 18: if ($t10) goto 19 else goto 22
 19: label L7
 20: $t3 := -($t1, $t0)
 21: goto 25
 22: label L6
 23: $t11 := 0
 24: $t3 := $t11
 25: label L8
 26: $t4 := $t3
 27: label L5
 28: return $t4
}


============ Control Flow Reconstruction ================

[variant baseline]
fun test::if_else_if_chain
[
    Basic {
        lower: 0,
        upper: 1,
    },
    IfThenElse {
        cond_at: 2,
        then_branch: Basic {
            lower: 3,
            upper: 5,
        },
        else_branch: Some(
            Seq(
                [
                    Basic {
                        lower: 7,
                        upper: 9,
                    },
                    IfThenElse {
                        cond_at: 10,
                        then_branch: Basic {
                            lower: 11,
                            upper: 13,
                        },
                        else_branch: Some(
                            Seq(
                                [
                                    Basic {
                                        lower: 15,
                                        upper: 17,
                                    },
                                    IfThenElse {
                                        cond_at: 18,
                                        then_branch: Basic {
                                            lower: 19,
                                            upper: 21,
                                        },
                                        else_branch: Some(
                                            Basic {
                                                lower: 23,
                                                upper: 25,
                                            },
                                        ),
                                    },
                                    Basic {
                                        lower: 26,
                                        upper: 27,
                                    },
                                ],
                            ),
                        ),
                    },
                    Basic {
                        lower: 28,
                        upper: 29,
                    },
                ],
            ),
        ),
    },
    Basic {
        lower: 30,
        upper: 31,
    },
]

[variant baseline]
fun test::nested_if_else
[
    Basic {
        lower: 0,
        upper: 1,
    },
    IfThenElse {
        cond_at: 2,
        then_branch: Seq(
            [
                Basic {
                    lower: 3,
                    upper: 5,
                },
                IfThenElse {
                    cond_at: 6,
                    then_branch: Basic {
                        lower: 7,
                        upper: 8,
                    },
                    else_branch: Some(
                        Basic {
                            lower: 10,
                            upper: 11,
                        },
                    ),
                },
                Basic {
                    lower: 12,
                    upper: 13,
                },
            ],
        ),
        else_branch: Some(
            Seq(
                [
                    Basic {
                        lower: 15,
                        upper: 17,
                    },
                    IfThenElse {
                        cond_at: 18,
                        then_branch: Basic {
                            lower: 19,
                            upper: 20,
                        },
                        else_branch: Some(
                            Basic {
                                lower: 22,
                                upper: 24,
                            },
                        ),
                    },
                    Basic {
                        lower: 25,
                        upper: 26,
                    },
                ],
            ),
        ),
    },
    Basic {
        lower: 27,
        upper: 28,
    },
]
